# CookieTrack Backend API

<div align="center">
  <h3 align="center">CookieTrack Backend</h3>
  <p align="center">
    RESTful API service powering the CookieTrack application
    <br />
    <a href="../README.md">Main Documentation</a>
    ·
    <a href="https://github.com/Thin-Mint-Techies/CookieTrack/issues/new?labels=bug&template=bug-report---.md">Report Bug</a>
    ·
    <a href="https://github.com/Thin-Mint-Techies/CookieTrack/issues/new?labels=enhancement&template=feature-request---.md">Request Feature</a>
  </p>
</div>

## Table of Contents
- [Overview](#overview)
- [Tech Stack](#tech-stack)
- [Project Structure](#project-structure)
- [Getting Started](#getting-started)
- [API Documentation](#api-documentation)
- [Development](#development)
- [Deployment](#deployment)

## Overview
The backend service handles all server-side operations including:
- User Authentication & Authorization
- Cookie Inventory Management
- Order Processing
- File Storage
- Notifications
- Analytics
    
## Tech Stack
- "node": "22"
- "@sendgrid/mail": "^8.1.4",
- "axios": "^1.7.9",
- "bcrypt": "^5.1.1",
- "cors": "^2.8.5",
- "dotenv": "^16.4.7",
- "express": "^4.21.2",
- "express-rate-limit": "^7.5.0",
- "firebase": "^11.2.0",
- "firebase-admin": "^12.7.0",
- "firebase-functions": "^6.3.0",
- "jsonwebtoken": "^9.0.2",
- "multer": "^1.4.5-lts.1",
- "nodemailer": "^6.10.0",
- "nodemon": "^3.1.9",
- "xss": "^1.0.15"

## Project Structure
```
functions/
├── dataFromat.js     
├── firebaseConfig.js    
├── index.js     
├── controllers/              
│   ├── authController.js
│   ├── cookieController.js
│   ├── documentController.js
│   ├── inventoryController.js
│   ├── orderController.js
│   ├── rewardController.js
│   ├── saleController.js
│   ├── trooperController.js
│   └── userController.js
├── routes/                  
│   ├── authRoute.js
│   ├── parentRoute.js
│   ├── leaderRoute.js
│   └── sharedRoute.js
├── services/                
│   ├── authService.js
│   ├── troopService.js
│   └── documentService.js
├── utils/                    
│   ├── roleCheck.js
│   └── fileUpload.js
├── index.js                 
└── package.json
```

### Architecture 
1. **Routes** 
   - Entry point for all API requests
   - Handles request routing and URL mapping
   - Applies middleware (authentication, validation)

2. **Controllers** 
   - Processes HTTP requests and responses
   - Validates input data
   - Coordinates between multiple services
   - Returns appropriate HTTP status codes

3. **Services Layer** 
   - Contains core business logic
   - Handles database operations
   - Manages external service integrations

### Request Data Flow Example
POST /order
↓
Route (orderRoute.js)
  - Validates JWT token
↓
Controller (orderController.js)
  - Validates order data
↓
Services:
  orderService.js
    - Validates order data
    - Checks stock availability
    - Creates order record
    - Calculates totals
    - Updates cookie inventory
    - Sends order confirmations

## Getting Started
1. **Install dependencies:**
```bash
npm install
```

2. **Environment Configuration:**
Create a `.env` file using data from Firebase console and set the following variables:
```env
COOKIETRACK_FIREBASE_TYPE=
COOKIETRACK_FIREBASE_PROJECT_ID=
COOKIETRACK_FIREBASE_PRIVATE_KEY_ID=
COOKIETRACK_FIREBASE_PRIVATE_KEY=
COOKIETRACK_FIREBASE_CLIENT_EMAIL=
COOKIETRACK_FIREBASE_CLIENT_ID=
COOKIETRACK_FIREBASE_AUTH_URI=
COOKIETRACK_FIREBASE_TOKEN_URI=
COOKIETRACK_FIREBASE_AUTH_PROVIDER_CERT_URL=
COOKIETRACK_FIREBASE_CLIENT_CERT_URL=
COOKIETRACK_FIREBASE_UNIVERSE_DOMAIN=
COOKIETRACK_FIREBASE_DB_URL=
COOKIETRACK_FIREBASE_STORAGE_BUCKET=
COOKIETRACK_FIREBASE_API_KEY=
```

3. ** Additional env variables:**
Add these to the `.env` files as needed (from API keys to secret keys):
```env
NODE_ENV=development
SECRET_CODE = 
SENDGRID_API_KEY=
```

### Start development server
4. **Start development server:**
```bash
npm run dev
```

### Push to Firebase Functions
5. **Deploy to Firebase Functions:**
```bash
firebase deploy --only functions
```


<p align="right">(<a href="#readme-top">back to top</a>)</p>